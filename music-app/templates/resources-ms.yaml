apiVersion: apps/v1
kind: Deployment
metadata:
  name: resources-ms-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.services.resourcesMs.replicaCount }}
  selector:
    matchLabels:
      app: resources-ms
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        app: resources-ms
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    spec:
      containers:
        - name: resources-ms
          image: {{ .Values.services.resourcesMs.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.services.resourcesMs.resourcesMsPort }}
          env:
            - name: RESOURCES_MS_PORT
              value: "{{ .Values.services.resourcesMs.resourcesMsPort }}"
            - name: RESOURCES_DB_URL
              value: "{{ .Values.services.resourcesMs.resourcesDbUrl }}"
            - name: RESOURCES_DB_PORT
              value: "{{ .Values.services.resourcesMs.resourcesDbPort }}"
            - name: EUREKA_URI
              value: "{{ .Values.services.resourcesMs.eurekaUri }}"
            - name: ENABLE_EUREKA_CLIENT
              value: "{{ .Values.services.resourcesMs.enableEurekaClient }}"
            - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
              value: "{{ .Values.services.resourcesMs.eurekaClientServiceUrlDefaultZone }}"
            - name: SONGS_MS_URL
              value: "{{ .Values.services.resourcesMs.songsMsUrl }}"
            - name: SONGS_MS_PORT
              value: "{{ .Values.services.songsMs.songsMsPort }}"
          resources:
            limits:
              cpu: {{ .Values.services.resourcesMs.resources.limits.cpu }}
              memory: {{ .Values.services.resourcesMs.resources.limits.memory }}
            requests:
              cpu: {{ .Values.services.resourcesMs.resources.requests.cpu }}
              memory: {{ .Values.services.resourcesMs.resources.requests.memory }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.services.resourcesMs.resourcesMsPort }}
            initialDelaySeconds: 25
            periodSeconds: 10
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.services.resourcesMs.resourcesMsPort }}
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 20
          startupProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.services.resourcesMs.resourcesMsPort }}
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 30
---
apiVersion: v1
kind: Service
metadata:
  name: resources-ms
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: resources-ms
  ports:
    - port: {{ .Values.services.resourcesMs.resourcesMsPort }}
      targetPort: {{ .Values.services.resourcesMs.resourcesMsPort }}